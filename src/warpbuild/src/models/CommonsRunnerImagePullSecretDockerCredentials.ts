/* tslint:disable */
/* eslint-disable */
/**
 * Warp Builds API Docs
 * This is the docs for warp builds api for argonaut
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 *
 * @export
 * @interface CommonsRunnerImagePullSecretDockerCredentials
 */
export interface CommonsRunnerImagePullSecretDockerCredentials {
  /**
   *
   * @type {string}
   * @memberof CommonsRunnerImagePullSecretDockerCredentials
   */
  host: string
  /**
   *
   * @type {string}
   * @memberof CommonsRunnerImagePullSecretDockerCredentials
   */
  password: string
  /**
   *
   * @type {string}
   * @memberof CommonsRunnerImagePullSecretDockerCredentials
   */
  username: string
}

/**
 * Check if a given object implements the CommonsRunnerImagePullSecretDockerCredentials interface.
 */
export function instanceOfCommonsRunnerImagePullSecretDockerCredentials(
  value: object
): value is CommonsRunnerImagePullSecretDockerCredentials {
  if (!('host' in value) || value['host'] === undefined) return false
  if (!('password' in value) || value['password'] === undefined) return false
  if (!('username' in value) || value['username'] === undefined) return false
  return true
}

export function CommonsRunnerImagePullSecretDockerCredentialsFromJSON(
  json: any
): CommonsRunnerImagePullSecretDockerCredentials {
  return CommonsRunnerImagePullSecretDockerCredentialsFromJSONTyped(json, false)
}

export function CommonsRunnerImagePullSecretDockerCredentialsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): CommonsRunnerImagePullSecretDockerCredentials {
  if (json == null) {
    return json
  }
  return {
    host: json['host'],
    password: json['password'],
    username: json['username']
  }
}

export function CommonsRunnerImagePullSecretDockerCredentialsToJSON(
  value?: CommonsRunnerImagePullSecretDockerCredentials | null
): any {
  if (value == null) {
    return value
  }
  return {
    host: value['host'],
    password: value['password'],
    username: value['username']
  }
}
