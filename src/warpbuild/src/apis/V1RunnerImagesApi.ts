/* tslint:disable */
/* eslint-disable */
/**
 * Warp Builds API Docs
 * This is the docs for warp builds api for argonaut
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime'
import type {
  CommonsCreateRunnerImageInput,
  CommonsCreateRunnerImagePullSecretInput,
  CommonsListRunnerImagePullSecretsOutput,
  CommonsListRunnerImagesOutput,
  CommonsRunnerImage,
  CommonsRunnerImagePullSecret,
  CommonsRunnerImageVersion,
  CommonsUpdateRunnerImageInput,
  CommonsUpdateRunnerImagePullSecretInput,
  TypesGenericSuccessMessage,
  WarpBuildAPIError
} from '../models/index'
import {
  CommonsCreateRunnerImageInputFromJSON,
  CommonsCreateRunnerImageInputToJSON,
  CommonsCreateRunnerImagePullSecretInputFromJSON,
  CommonsCreateRunnerImagePullSecretInputToJSON,
  CommonsListRunnerImagePullSecretsOutputFromJSON,
  CommonsListRunnerImagePullSecretsOutputToJSON,
  CommonsListRunnerImagesOutputFromJSON,
  CommonsListRunnerImagesOutputToJSON,
  CommonsRunnerImageFromJSON,
  CommonsRunnerImageToJSON,
  CommonsRunnerImagePullSecretFromJSON,
  CommonsRunnerImagePullSecretToJSON,
  CommonsRunnerImageVersionFromJSON,
  CommonsRunnerImageVersionToJSON,
  CommonsUpdateRunnerImageInputFromJSON,
  CommonsUpdateRunnerImageInputToJSON,
  CommonsUpdateRunnerImagePullSecretInputFromJSON,
  CommonsUpdateRunnerImagePullSecretInputToJSON,
  TypesGenericSuccessMessageFromJSON,
  TypesGenericSuccessMessageToJSON,
  WarpBuildAPIErrorFromJSON,
  WarpBuildAPIErrorToJSON
} from '../models/index'

export interface CreateRunnerImageRequest {
  body: CommonsCreateRunnerImageInput
}

export interface CreateRunnerImagePullSecretRequest {
  body: CommonsCreateRunnerImagePullSecretInput
}

export interface DeleteRunnerImageRequest {
  id: string
}

export interface DeleteRunnerImagePullSecretRequest {
  id: string
}

export interface GetLatestRunnerImageVersionRequest {
  id: string
}

export interface GetRunnerImageRequest {
  id: string
}

export interface GetRunnerImagePullSecretRequest {
  id: string
}

export interface ListRunnerImagesRequest {
  exclude_warpbuild_managed?: boolean
  alias?: string
  runner_image_pull_secret_id?: string
  stack_kind?: string
  region?: string
}

export interface UpdateRunnerImageRequest {
  id: string
  body: CommonsUpdateRunnerImageInput
}

export interface UpdateRunnerImagePullSecretRequest {
  id: string
  body: CommonsUpdateRunnerImagePullSecretInput
}

/**
 *
 */
export class V1RunnerImagesApi extends runtime.BaseAPI {
  /**
   * Create a new runner image.
   */
  async createRunnerImageRaw(
    requestParameters: CreateRunnerImageRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CommonsRunnerImage>> {
    if (requestParameters['body'] == null) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter "body" was null or undefined when calling createRunnerImage().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request(
      {
        path: `/runner-images`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: CommonsCreateRunnerImageInputToJSON(requestParameters['body'])
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, jsonValue =>
      CommonsRunnerImageFromJSON(jsonValue)
    )
  }

  /**
   * Create a new runner image.
   */
  async createRunnerImage(
    requestParameters: CreateRunnerImageRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CommonsRunnerImage> {
    const response = await this.createRunnerImageRaw(
      requestParameters,
      initOverrides
    )
    return await response.value()
  }

  /**
   * Create a new runner image pull secret.
   */
  async createRunnerImagePullSecretRaw(
    requestParameters: CreateRunnerImagePullSecretRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CommonsRunnerImagePullSecret>> {
    if (requestParameters['body'] == null) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter "body" was null or undefined when calling createRunnerImagePullSecret().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request(
      {
        path: `/runner-image-pull-secrets`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: CommonsCreateRunnerImagePullSecretInputToJSON(
          requestParameters['body']
        )
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, jsonValue =>
      CommonsRunnerImagePullSecretFromJSON(jsonValue)
    )
  }

  /**
   * Create a new runner image pull secret.
   */
  async createRunnerImagePullSecret(
    requestParameters: CreateRunnerImagePullSecretRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CommonsRunnerImagePullSecret> {
    const response = await this.createRunnerImagePullSecretRaw(
      requestParameters,
      initOverrides
    )
    return await response.value()
  }

  /**
   * Delete runner image details for the id.
   */
  async deleteRunnerImageRaw(
    requestParameters: DeleteRunnerImageRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CommonsRunnerImage>> {
    if (requestParameters['id'] == null) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter "id" was null or undefined when calling deleteRunnerImage().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/runner-images/{id}`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters['id']))
        ),
        method: 'DELETE',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, jsonValue =>
      CommonsRunnerImageFromJSON(jsonValue)
    )
  }

  /**
   * Delete runner image details for the id.
   */
  async deleteRunnerImage(
    requestParameters: DeleteRunnerImageRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CommonsRunnerImage> {
    const response = await this.deleteRunnerImageRaw(
      requestParameters,
      initOverrides
    )
    return await response.value()
  }

  /**
   * Delete runner image pull secret details for the id.
   */
  async deleteRunnerImagePullSecretRaw(
    requestParameters: DeleteRunnerImagePullSecretRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<TypesGenericSuccessMessage>> {
    if (requestParameters['id'] == null) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter "id" was null or undefined when calling deleteRunnerImagePullSecret().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/runner-image-pull-secrets/{id}`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters['id']))
        ),
        method: 'DELETE',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, jsonValue =>
      TypesGenericSuccessMessageFromJSON(jsonValue)
    )
  }

  /**
   * Delete runner image pull secret details for the id.
   */
  async deleteRunnerImagePullSecret(
    requestParameters: DeleteRunnerImagePullSecretRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<TypesGenericSuccessMessage> {
    const response = await this.deleteRunnerImagePullSecretRaw(
      requestParameters,
      initOverrides
    )
    return await response.value()
  }

  /**
   * Get latest runner image version details for the id.
   */
  async getLatestRunnerImageVersionRaw(
    requestParameters: GetLatestRunnerImageVersionRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CommonsRunnerImageVersion>> {
    if (requestParameters['id'] == null) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter "id" was null or undefined when calling getLatestRunnerImageVersion().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/runner-images/{id}/latest-version`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters['id']))
        ),
        method: 'GET',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, jsonValue =>
      CommonsRunnerImageVersionFromJSON(jsonValue)
    )
  }

  /**
   * Get latest runner image version details for the id.
   */
  async getLatestRunnerImageVersion(
    requestParameters: GetLatestRunnerImageVersionRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CommonsRunnerImageVersion> {
    const response = await this.getLatestRunnerImageVersionRaw(
      requestParameters,
      initOverrides
    )
    return await response.value()
  }

  /**
   * Get runner image details for the id.
   */
  async getRunnerImageRaw(
    requestParameters: GetRunnerImageRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CommonsRunnerImage>> {
    if (requestParameters['id'] == null) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter "id" was null or undefined when calling getRunnerImage().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/runner-images/{id}`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters['id']))
        ),
        method: 'GET',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, jsonValue =>
      CommonsRunnerImageFromJSON(jsonValue)
    )
  }

  /**
   * Get runner image details for the id.
   */
  async getRunnerImage(
    requestParameters: GetRunnerImageRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CommonsRunnerImage> {
    const response = await this.getRunnerImageRaw(
      requestParameters,
      initOverrides
    )
    return await response.value()
  }

  /**
   * Get runner image pull secret details for the id.
   */
  async getRunnerImagePullSecretRaw(
    requestParameters: GetRunnerImagePullSecretRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CommonsRunnerImagePullSecret>> {
    if (requestParameters['id'] == null) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter "id" was null or undefined when calling getRunnerImagePullSecret().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/runner-image-pull-secrets/{id}`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters['id']))
        ),
        method: 'GET',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, jsonValue =>
      CommonsRunnerImagePullSecretFromJSON(jsonValue)
    )
  }

  /**
   * Get runner image pull secret details for the id.
   */
  async getRunnerImagePullSecret(
    requestParameters: GetRunnerImagePullSecretRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CommonsRunnerImagePullSecret> {
    const response = await this.getRunnerImagePullSecretRaw(
      requestParameters,
      initOverrides
    )
    return await response.value()
  }

  /**
   * List all runner image pull secrets.
   */
  async listRunnerImagePullSecretsRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CommonsListRunnerImagePullSecretsOutput>> {
    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/runner-image-pull-secrets`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, jsonValue =>
      CommonsListRunnerImagePullSecretsOutputFromJSON(jsonValue)
    )
  }

  /**
   * List all runner image pull secrets.
   */
  async listRunnerImagePullSecrets(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CommonsListRunnerImagePullSecretsOutput> {
    const response = await this.listRunnerImagePullSecretsRaw(initOverrides)
    return await response.value()
  }

  /**
   * List all runner images.
   */
  async listRunnerImagesRaw(
    requestParameters: ListRunnerImagesRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CommonsListRunnerImagesOutput>> {
    const queryParameters: any = {}

    if (requestParameters['exclude_warpbuild_managed'] != null) {
      queryParameters['exclude_warpbuild_managed'] =
        requestParameters['exclude_warpbuild_managed']
    }

    if (requestParameters['alias'] != null) {
      queryParameters['alias'] = requestParameters['alias']
    }

    if (requestParameters['runner_image_pull_secret_id'] != null) {
      queryParameters['runner_image_pull_secret_id'] =
        requestParameters['runner_image_pull_secret_id']
    }

    if (requestParameters['stack_kind'] != null) {
      queryParameters['stack_kind'] = requestParameters['stack_kind']
    }

    if (requestParameters['region'] != null) {
      queryParameters['region'] = requestParameters['region']
    }

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/runner-images`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, jsonValue =>
      CommonsListRunnerImagesOutputFromJSON(jsonValue)
    )
  }

  /**
   * List all runner images.
   */
  async listRunnerImages(
    requestParameters: ListRunnerImagesRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CommonsListRunnerImagesOutput> {
    const response = await this.listRunnerImagesRaw(
      requestParameters,
      initOverrides
    )
    return await response.value()
  }

  /**
   * Update runner image details for the id.
   */
  async updateRunnerImageRaw(
    requestParameters: UpdateRunnerImageRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CommonsRunnerImage>> {
    if (requestParameters['id'] == null) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter "id" was null or undefined when calling updateRunnerImage().'
      )
    }

    if (requestParameters['body'] == null) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter "body" was null or undefined when calling updateRunnerImage().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request(
      {
        path: `/runner-images/{id}`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters['id']))
        ),
        method: 'PUT',
        headers: headerParameters,
        query: queryParameters,
        body: CommonsUpdateRunnerImageInputToJSON(requestParameters['body'])
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, jsonValue =>
      CommonsRunnerImageFromJSON(jsonValue)
    )
  }

  /**
   * Update runner image details for the id.
   */
  async updateRunnerImage(
    requestParameters: UpdateRunnerImageRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CommonsRunnerImage> {
    const response = await this.updateRunnerImageRaw(
      requestParameters,
      initOverrides
    )
    return await response.value()
  }

  /**
   * Update runner image pull secret details for the id.
   */
  async updateRunnerImagePullSecretRaw(
    requestParameters: UpdateRunnerImagePullSecretRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CommonsRunnerImagePullSecret>> {
    if (requestParameters['id'] == null) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter "id" was null or undefined when calling updateRunnerImagePullSecret().'
      )
    }

    if (requestParameters['body'] == null) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter "body" was null or undefined when calling updateRunnerImagePullSecret().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request(
      {
        path: `/runner-image-pull-secrets/{id}`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters['id']))
        ),
        method: 'PUT',
        headers: headerParameters,
        query: queryParameters,
        body: CommonsUpdateRunnerImagePullSecretInputToJSON(
          requestParameters['body']
        )
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, jsonValue =>
      CommonsRunnerImagePullSecretFromJSON(jsonValue)
    )
  }

  /**
   * Update runner image pull secret details for the id.
   */
  async updateRunnerImagePullSecret(
    requestParameters: UpdateRunnerImagePullSecretRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CommonsRunnerImagePullSecret> {
    const response = await this.updateRunnerImagePullSecretRaw(
      requestParameters,
      initOverrides
    )
    return await response.value()
  }
}
